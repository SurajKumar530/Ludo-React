{"version":3,"sources":["recoil/atoms.js","assets/diceRoll2.mp3","components/dice.js","config/constants.js","assets/coinPalegreen.svg","assets/coinYellow.svg","assets/coinTomato.svg","assets/coinRoyalblue.svg","assets/coinMove.mp3","components/coin.js","components/homeCenter.js","assets/starOutline3.png","components/stepsBox.js","components/stepsGrid.js","components/homeBox.js","components/gameSetup.js","App.js","reportWebVitals.js","index.js"],"names":["currentPlayersListState","atom","key","default","currentPlayerState","currentDiceState","num","isLocked","lastRolledBy","allCoinState","palegreen","p0","position","isTurnAvailable","p1","p2","p3","yellow","y0","y1","y2","y3","royalblue","r0","r1","r2","r3","tomato","t0","t1","t2","t3","allBlockState","Dice","useState","isAnimating","setIsAnimating","useRecoilState","diceState","setDiceState","currentPlayer","useRecoilValue","className","onClick","Audio","diceRollSound","play","setTimeout","Math","ceil","random","style","gridTemplateColumns","Array","fill","map","_","i","backgroundColor","colorMap","p","y","r","t","playerOrder","markColorIndexes","leftOrTop","openIndex","markIndex","rightOrBottom","markStarIndexes","starIndexes","startMoves","moves","images","coinPalegreen","coinYellow","coinTomato","coinRoyalblue","Coin","parent","index","setCurrentPlayer","coinState","setCoinState","blockState","setBlockState","playersList","currentPosition","isPositionNotHomeOrWon","every","x","includes","parentMoves","nextMove","indexOf","length","moveableClass","useEffect","currentPlayerCoins","updatedState","cloneDeep","moveAvailCount","Object","keys","forEach","console","log","changePlayer","currentPlayerIndex","nextPlayer","coinMoveSound","updatedCoinState","updatedBlockState","splice","Set","parentKey","updatedFullCoinState","updatedFullBlockState","cb","coinsToBeReset","isStateUpdated","currentState","elem","item","startsWith","push","updateCoinBlockStates","isKilledSomeone","src","HomeCenterCoins","HomeCenter","transform","StepsBox","adjacentDirection","backgroundImage","StarBg","StepsGrid","j","HomeBox","border","PlayerButton","count","setTransClass","states","setCurrentPlayersList","resetBlockState","useResetRecoilState","resetCoinState","resetDiceState","randomNum","floor","slice","GameSetup","transClass","color","fontSize","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEaA,EAA0BC,YAAK,CAC1CC,IAAK,0BACLC,QAAS,KAGEC,EAAqBH,YAAK,CACrCC,IAAK,qBACLC,QAAS,KAGEE,EAAmBJ,YAAK,CACnCC,IAAK,mBACLC,QAAS,CAAEG,IAAK,EAAGC,UAAU,EAAOC,aAAc,QAQvCC,EAAeR,YAAK,CAC/BC,IAAK,eACLC,QAAS,CACPO,UAAW,CACTC,GAAI,CAAEC,SAAU,OAAQC,iBAAiB,GACzCC,GAAI,CAAEF,SAAU,OAAQC,iBAAiB,GACzCE,GAAI,CAAEH,SAAU,OAAQC,iBAAiB,GACzCG,GAAI,CAAEJ,SAAU,OAAQC,iBAAiB,IAE3CI,OAAQ,CACNC,GAAI,CAAEN,SAAU,OAAQC,iBAAiB,GACzCM,GAAI,CAAEP,SAAU,OAAQC,iBAAiB,GACzCO,GAAI,CAAER,SAAU,OAAQC,iBAAiB,GACzCQ,GAAI,CAAET,SAAU,OAAQC,iBAAiB,IAE3CS,UAAW,CACTC,GAAI,CAAEX,SAAU,OAAQC,iBAAiB,GACzCW,GAAI,CAAEZ,SAAU,OAAQC,iBAAiB,GACzCY,GAAI,CAAEb,SAAU,OAAQC,iBAAiB,GACzCa,GAAI,CAAEd,SAAU,OAAQC,iBAAiB,IAE3Cc,OAAQ,CACNC,GAAI,CAAEhB,SAAU,OAAQC,iBAAiB,GACzCgB,GAAI,CAAEjB,SAAU,OAAQC,iBAAiB,GACzCiB,GAAI,CAAElB,SAAU,OAAQC,iBAAiB,GACzCkB,GAAI,CAAEnB,SAAU,OAAQC,iBAAiB,OAKlCmB,EAAgB/B,YAAK,CAChCC,IAAK,gBACLC,QAAS,KCtDI,MAA0B,sC,OCyD1B8B,MAhDf,WACE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCC,YAAehC,GAAjD,mBAAOiC,EAAP,KAAkBC,EAAlB,KACMC,EAAgBC,YAAerC,GA0BrC,OACE,qBACEsC,UAAW,QAAUP,EAAc,kBAAoB,IACvDQ,QAjBY,WACTR,GAAgBG,EAAU/B,WAC7BgC,EAAa,CAAEjC,IAAK,EAAGC,UAAU,EAAOC,aAAcgC,IACtDJ,GAAe,GAEf,IAAIQ,MAAMC,GAAeC,OAEzBC,YAAW,WAfbR,EAAa,CAEXjC,IAAK0C,KAAKC,KAAqB,EAAhBD,KAAKE,UACpB3C,UAAU,EACVC,aAAcgC,IAaZJ,GAAe,KACd,OAQHe,MAAO,CACLC,oBAAqBd,EAAUhC,IAAM,EAAI,iBAAmB,OAJhE,SAOG+C,MAAMf,EAAUhC,KACdgD,OACAC,KAAI,SAACC,EAAGC,GAAJ,OACH,8BACE,qBAAKN,MAAO,CAAEO,gBAAiBlB,MADvBiB,SCjDPE,EAAW,CACtBC,EAAG,YACHC,EAAG,SACHC,EAAG,YACHC,EAAG,UAGQC,EAAc,CAAC,YAAa,SAAU,YAAa,UAEnDC,EAAmB,CAC9BC,UAAW,CACTC,UAAW,KACXC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAE5CC,cAAe,CACbF,UAAW,KACXC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,QAIjCE,EAAkB,CAC7BJ,UAAW,CAAEE,UAAW,CAAC,KAAM,OAC/BC,cAAe,CAAED,UAAW,CAAC,KAAM,QAGxBG,EAAc,CACzB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGWC,EAAa,CACxB7C,OAAQ,MACRjB,UAAW,MACXO,OAAQ,MACRK,UAAW,OAUAmD,EAAQ,CACnB/D,UAAW,CACT,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAEFO,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAEFK,UAAW,CACT,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAEFK,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,UC7RW,MAA0B,0CCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,0CCA1B,MAA0B,qCCkBnC+C,EAAS,CACbhE,UAAWiE,EACX1D,OAAQ2D,EACRjD,OAAQkD,EACRvD,UAAWwD,GA+MEC,MAvMf,YAA6C,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MAAOvC,EAAa,EAAbA,UAC7B,EAA0CL,YAAejC,GAAzD,mBAAOoC,EAAP,KAAsB0C,EAAtB,KACA,EAAkC7C,YAAe5B,GAAjD,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAoC/C,YAAeL,GAAnD,mBAAOqD,EAAP,KAAmBC,EAAnB,KACA,EAAkCjD,YAAehC,GAAjD,mBAAOiC,EAAP,KAAkBC,EAAlB,KACMgD,EAAc9C,YAAezC,GAEnC,EACEmF,EAAUH,GAAQC,GADFO,EAAlB,EAAQ5E,SAA2BC,EAAnC,EAAmCA,gBAI7B4E,EAAyB,CAAC,OAAQ,OAAOC,OAC7C,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","file":"static/js/main.7166d9e9.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const currentPlayersListState = atom({\r\n  key: \"currentPlayersListState\",\r\n  default: [],\r\n});\r\n\r\nexport const currentPlayerState = atom({\r\n  key: \"currentPlayerState\",\r\n  default: \"\",\r\n});\r\n\r\nexport const currentDiceState = atom({\r\n  key: \"currentDiceState\",\r\n  default: { num: 0, isLocked: false, lastRolledBy: null },\r\n});\r\n\r\n/**\r\n * Posible values:\r\n * \"home\" - initial state\r\n * \"won\" - coin entered won state\r\n */\r\nexport const allCoinState = atom({\r\n  key: \"allCoinState\",\r\n  default: {\r\n    palegreen: {\r\n      p0: { position: \"home\", isTurnAvailable: true },\r\n      p1: { position: \"home\", isTurnAvailable: true },\r\n      p2: { position: \"home\", isTurnAvailable: true },\r\n      p3: { position: \"home\", isTurnAvailable: true },\r\n    },\r\n    yellow: {\r\n      y0: { position: \"home\", isTurnAvailable: true },\r\n      y1: { position: \"home\", isTurnAvailable: true },\r\n      y2: { position: \"home\", isTurnAvailable: true },\r\n      y3: { position: \"home\", isTurnAvailable: true },\r\n    },\r\n    royalblue: {\r\n      r0: { position: \"home\", isTurnAvailable: true },\r\n      r1: { position: \"home\", isTurnAvailable: true },\r\n      r2: { position: \"home\", isTurnAvailable: true },\r\n      r3: { position: \"home\", isTurnAvailable: true },\r\n    },\r\n    tomato: {\r\n      t0: { position: \"home\", isTurnAvailable: true },\r\n      t1: { position: \"home\", isTurnAvailable: true },\r\n      t2: { position: \"home\", isTurnAvailable: true },\r\n      t3: { position: \"home\", isTurnAvailable: true },\r\n    },\r\n  },\r\n});\r\n\r\nexport const allBlockState = atom({\r\n  key: \"allBlockState\",\r\n  default: {\r\n    // t30: [\"t0\", \"p1\"],\r\n    // \"r-won\": [\"r0\", \"r1\"],\r\n    // r51: [\"r2\"],\r\n  },\r\n});\r\n","export default __webpack_public_path__ + \"static/media/diceRoll2.55ad9bac.mp3\";","import { useState, useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { currentDiceState, currentPlayerState } from \"../recoil/atoms\";\r\nimport diceRollSound from \"../assets/diceRoll2.mp3\";\r\n\r\n/**\r\n * Component for DICE.\r\n * @returns JSX\r\n */\r\nfunction Dice() {\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [diceState, setDiceState] = useRecoilState(currentDiceState);\r\n  const currentPlayer = useRecoilValue(currentPlayerState);\r\n\r\n  // Generates random dice value between 1 and 6\r\n  const rotateDice = () =>\r\n    setDiceState({\r\n      // num: 6,\r\n      num: Math.ceil(Math.random() * 6),\r\n      isLocked: true,\r\n      lastRolledBy: currentPlayer,\r\n    });\r\n\r\n  // Event handler for dice onClick\r\n  const onClick = () => {\r\n    if (!isAnimating && !diceState.isLocked) {\r\n      setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\r\n      setIsAnimating(true);\r\n\r\n      new Audio(diceRollSound).play();\r\n\r\n      setTimeout(() => {\r\n        rotateDice();\r\n        setIsAnimating(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"dice\" + (isAnimating ? \" dice-animation\" : \"\")}\r\n      onClick={onClick}\r\n      style={{\r\n        gridTemplateColumns: diceState.num > 1 ? \"repeat(2, 1fr)\" : \"1fr\",\r\n      }}\r\n    >\r\n      {Array(diceState.num)\r\n        .fill()\r\n        .map((_, i) => (\r\n          <div key={i}>\r\n            <div style={{ backgroundColor: currentPlayer }}></div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dice;\r\n","export const colorMap = {\r\n  p: \"palegreen\",\r\n  y: \"yellow\",\r\n  r: \"royalblue\",\r\n  t: \"tomato\",\r\n};\r\n\r\nexport const playerOrder = [\"palegreen\", \"yellow\", \"royalblue\", \"tomato\"];\r\n\r\nexport const markColorIndexes = {\r\n  leftOrTop: {\r\n    openIndex: \"12\",\r\n    markIndex: [\"11\", \"12\", \"21\", \"31\", \"41\", \"51\"],\r\n  },\r\n  rightOrBottom: {\r\n    openIndex: \"40\",\r\n    markIndex: [\"01\", \"11\", \"21\", \"31\", \"40\", \"41\"],\r\n  },\r\n};\r\n\r\nexport const markStarIndexes = {\r\n  leftOrTop: { markIndex: [\"12\", \"20\"] },\r\n  rightOrBottom: { markIndex: [\"32\", \"40\"] },\r\n};\r\n\r\nexport const starIndexes = [\r\n  \"p32\",\r\n  \"p40\",\r\n  \"y20\",\r\n  \"y12\",\r\n  \"r20\",\r\n  \"r12\",\r\n  \"t32\",\r\n  \"t40\",\r\n];\r\n\r\nexport const startMoves = {\r\n  tomato: \"t40\",\r\n  palegreen: \"p40\",\r\n  yellow: \"y12\",\r\n  royalblue: \"r12\",\r\n};\r\n\r\nexport const specialMoves = {\r\n  r51: [\"r41\", \"r31\", \"r21\", \"r11\", \"r01\"],\r\n  p51: [\"p41\", \"p31\", \"p21\", \"p11\", \"p01\"],\r\n  y01: [\"y11\", \"y21\", \"y31\", \"y41\", \"y51\"],\r\n  r01: [\"r11\", \"r21\", \"r31\", \"r41\", \"r51\"],\r\n};\r\n\r\nexport const moves = {\r\n  palegreen: [\r\n    \"p40\",\r\n    \"p30\",\r\n    \"p20\",\r\n    \"p10\",\r\n    \"p00\",\r\n    \"y50\",\r\n    \"y40\",\r\n    \"y30\",\r\n    \"y20\",\r\n    \"y10\",\r\n    \"y00\",\r\n    \"y01\",\r\n    \"y02\",\r\n    \"y12\",\r\n    \"y22\",\r\n    \"y32\",\r\n    \"y42\",\r\n    \"y52\",\r\n    \"r50\",\r\n    \"r40\",\r\n    \"r30\",\r\n    \"r20\",\r\n    \"r10\",\r\n    \"r00\",\r\n    \"r01\",\r\n    \"r02\",\r\n    \"r12\",\r\n    \"r22\",\r\n    \"r32\",\r\n    \"r42\",\r\n    \"r52\",\r\n    \"t02\",\r\n    \"t12\",\r\n    \"t22\",\r\n    \"t32\",\r\n    \"t42\",\r\n    \"t52\",\r\n    \"t51\",\r\n    \"t50\",\r\n    \"t40\",\r\n    \"t30\",\r\n    \"t20\",\r\n    \"t10\",\r\n    \"t00\",\r\n    \"p02\",\r\n    \"p12\",\r\n    \"p22\",\r\n    \"p32\",\r\n    \"p42\",\r\n    \"p52\",\r\n    \"p51\",\r\n    \"p41\",\r\n    \"p31\",\r\n    \"p21\",\r\n    \"p11\",\r\n    \"p01\",\r\n    \"p-won\",\r\n  ],\r\n  yellow: [\r\n    \"y12\",\r\n    \"y22\",\r\n    \"y32\",\r\n    \"y42\",\r\n    \"y52\",\r\n    \"r50\",\r\n    \"r40\",\r\n    \"r30\",\r\n    \"r20\",\r\n    \"r10\",\r\n    \"r00\",\r\n    \"r01\",\r\n    \"r02\",\r\n    \"r12\",\r\n    \"r22\",\r\n    \"r32\",\r\n    \"r42\",\r\n    \"r52\",\r\n    \"t02\",\r\n    \"t12\",\r\n    \"t22\",\r\n    \"t32\",\r\n    \"t42\",\r\n    \"t52\",\r\n    \"t51\",\r\n    \"t50\",\r\n    \"t40\",\r\n    \"t30\",\r\n    \"t20\",\r\n    \"t10\",\r\n    \"t00\",\r\n    \"p02\",\r\n    \"p12\",\r\n    \"p22\",\r\n    \"p32\",\r\n    \"p42\",\r\n    \"p52\",\r\n    \"p51\",\r\n    \"p50\",\r\n    \"p40\",\r\n    \"p30\",\r\n    \"p20\",\r\n    \"p10\",\r\n    \"p00\",\r\n    \"y50\",\r\n    \"y40\",\r\n    \"y30\",\r\n    \"y20\",\r\n    \"y10\",\r\n    \"y00\",\r\n    \"y01\",\r\n    \"y11\",\r\n    \"y21\",\r\n    \"y31\",\r\n    \"y41\",\r\n    \"y51\",\r\n    \"y-won\",\r\n  ],\r\n  royalblue: [\r\n    \"r12\",\r\n    \"r22\",\r\n    \"r32\",\r\n    \"r42\",\r\n    \"r52\",\r\n    \"t02\",\r\n    \"t12\",\r\n    \"t22\",\r\n    \"t32\",\r\n    \"t42\",\r\n    \"t52\",\r\n    \"t51\",\r\n    \"t50\",\r\n    \"t40\",\r\n    \"t30\",\r\n    \"t20\",\r\n    \"t10\",\r\n    \"t00\",\r\n    \"p02\",\r\n    \"p12\",\r\n    \"p22\",\r\n    \"p32\",\r\n    \"p42\",\r\n    \"p52\",\r\n    \"p51\",\r\n    \"p50\",\r\n    \"p40\",\r\n    \"p30\",\r\n    \"p20\",\r\n    \"p10\",\r\n    \"p00\",\r\n    \"y50\",\r\n    \"y40\",\r\n    \"y30\",\r\n    \"y20\",\r\n    \"y10\",\r\n    \"y00\",\r\n    \"y01\",\r\n    \"y02\",\r\n    \"y12\",\r\n    \"y22\",\r\n    \"y32\",\r\n    \"y42\",\r\n    \"y52\",\r\n    \"r50\",\r\n    \"r40\",\r\n    \"r30\",\r\n    \"r20\",\r\n    \"r10\",\r\n    \"r00\",\r\n    \"r01\",\r\n    \"r11\",\r\n    \"r21\",\r\n    \"r31\",\r\n    \"r41\",\r\n    \"r51\",\r\n    \"r-won\",\r\n  ],\r\n  tomato: [\r\n    \"t40\",\r\n    \"t30\",\r\n    \"t20\",\r\n    \"t10\",\r\n    \"t00\",\r\n    \"p02\",\r\n    \"p12\",\r\n    \"p22\",\r\n    \"p32\",\r\n    \"p42\",\r\n    \"p52\",\r\n    \"p51\",\r\n    \"p50\",\r\n    \"p40\",\r\n    \"p30\",\r\n    \"p20\",\r\n    \"p10\",\r\n    \"p00\",\r\n    \"y50\",\r\n    \"y40\",\r\n    \"y30\",\r\n    \"y20\",\r\n    \"y10\",\r\n    \"y00\",\r\n    \"y01\",\r\n    \"y02\",\r\n    \"y12\",\r\n    \"y22\",\r\n    \"y32\",\r\n    \"y42\",\r\n    \"y52\",\r\n    \"r50\",\r\n    \"r40\",\r\n    \"r30\",\r\n    \"r20\",\r\n    \"r10\",\r\n    \"r00\",\r\n    \"r01\",\r\n    \"r02\",\r\n    \"r12\",\r\n    \"r22\",\r\n    \"r32\",\r\n    \"r42\",\r\n    \"r52\",\r\n    \"t02\",\r\n    \"t12\",\r\n    \"t22\",\r\n    \"t32\",\r\n    \"t42\",\r\n    \"t52\",\r\n    \"t51\",\r\n    \"t41\",\r\n    \"t31\",\r\n    \"t21\",\r\n    \"t11\",\r\n    \"t01\",\r\n    \"t-won\",\r\n  ],\r\n};\r\n","export default __webpack_public_path__ + \"static/media/coinPalegreen.906e5c42.svg\";","export default __webpack_public_path__ + \"static/media/coinYellow.9af4b538.svg\";","export default __webpack_public_path__ + \"static/media/coinTomato.5a7afb9a.svg\";","export default __webpack_public_path__ + \"static/media/coinRoyalblue.63c761cd.svg\";","export default __webpack_public_path__ + \"static/media/coinMove.c8776b00.mp3\";","import { useState, useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  currentPlayerState,\r\n  allCoinState,\r\n  allBlockState,\r\n  currentDiceState,\r\n  currentPlayersListState,\r\n} from \"../recoil/atoms\";\r\nimport { startMoves, moves, starIndexes, colorMap } from \"../config/constants\";\r\nimport coinPalegreen from \"../assets/coinPalegreen.svg\";\r\nimport coinYellow from \"../assets/coinYellow.svg\";\r\nimport coinTomato from \"../assets/coinTomato.svg\";\r\nimport coinRoyalblue from \"../assets/coinRoyalblue.svg\";\r\nimport coinMoveSound from \"../assets/coinMove.mp3\";\r\n\r\nconst images = {\r\n  palegreen: coinPalegreen,\r\n  yellow: coinYellow,\r\n  tomato: coinTomato,\r\n  royalblue: coinRoyalblue,\r\n};\r\n\r\n/**\r\n * Component for COIN that moves over entire board.\r\n * @param {Object} props\r\n * @returns JSX\r\n */\r\nfunction Coin({ parent, index, className }) {\r\n  const [currentPlayer, setCurrentPlayer] = useRecoilState(currentPlayerState);\r\n  const [coinState, setCoinState] = useRecoilState(allCoinState);\r\n  const [blockState, setBlockState] = useRecoilState(allBlockState);\r\n  const [diceState, setDiceState] = useRecoilState(currentDiceState);\r\n  const playersList = useRecoilValue(currentPlayersListState);\r\n\r\n  const { position: currentPosition, isTurnAvailable } =\r\n    coinState[parent][index];\r\n\r\n  // checks if the current position of coin is not home or won\r\n  const isPositionNotHomeOrWon = [\"home\", \"won\"].every(\r\n    (x) => !currentPosition.includes(x)\r\n  );\r\n\r\n  const parentMoves = moves[parent];\r\n  // Calculate next possible move for current coin\r\n  const nextMove = isPositionNotHomeOrWon\r\n    ? diceState.num &&\r\n      parentMoves.indexOf(currentPosition) + diceState.num < parentMoves.length\r\n      ? parentMoves[parentMoves.indexOf(currentPosition) + diceState.num]\r\n      : null\r\n    : currentPosition === \"home\"\r\n    ? startMoves[parent]\r\n    : \"\";\r\n\r\n  // Check with nextMove & diceNum; if the coin can move or not\r\n  const moveableClass =\r\n    currentPlayer === parent && nextMove\r\n      ? // (!currentPosition && nextMove) ||\r\n        // currentPosition === nextMove\r\n        // ? \"\"\r\n        // :\r\n        isTurnAvailable\r\n        ? isPositionNotHomeOrWon || diceState.num === 6\r\n          ? \" current-player-animation\"\r\n          : \"\"\r\n        : isPositionNotHomeOrWon && diceState.num\r\n        ? \" current-player-animation\"\r\n        : \"\"\r\n      : \"\";\r\n\r\n  /**\r\n   * This useEffect tracks the dice change and accordingly sets `isTurnAvailable`\r\n   * and also changes the player if next moe is not possible\r\n   */\r\n  useEffect(() => {\r\n    const currentPlayerCoins = coinState[parent];\r\n\r\n    if (diceState.num && currentPlayer === parent) {\r\n      const updatedState = _.cloneDeep(currentPlayerCoins);\r\n      let moveAvailCount = 0;\r\n\r\n      Object.keys(updatedState).forEach((key) => {\r\n        const position = updatedState[key].position;\r\n        if (\r\n          (position === \"home\" && diceState.num === 6) ||\r\n          ([\"home\", \"won\"].every((x) => !position.includes(x)) &&\r\n            parentMoves.indexOf(position) + diceState.num < parentMoves.length)\r\n        ) {\r\n          console.log({ position });\r\n          updatedState[key].isTurnAvailable = true;\r\n          moveAvailCount++;\r\n        } else {\r\n          updatedState[key].isTurnAvailable = false;\r\n        }\r\n      });\r\n\r\n      console.log({ moveAvailCount });\r\n\r\n      setCoinState({ ...coinState, [parent]: updatedState });\r\n      !moveAvailCount && changePlayer();\r\n    }\r\n  }, [diceState.num]);\r\n\r\n  /**\r\n   * This function updates the coin and block states accordingly, also checks if either of the coin is being killed by other.\r\n   * @param {String} parentKey              The nextMove the current coin should move to.\r\n   * @param {Object} updatedFullCoinState   Updated entire coin state object.\r\n   * @param {Object} updatedFullBlockState  Updated entire block state object.\r\n   * @param {Function} cb                   Should be called with a parameter i.e; number coins that have killed by some other coin.\r\n   * @returns void\r\n   */\r\n  const updateCoinBlockStates = (\r\n    parentKey,\r\n    updatedFullCoinState,\r\n    updatedFullBlockState,\r\n    cb\r\n  ) => {\r\n    setCoinState(updatedFullCoinState);\r\n    setBlockState(updatedFullBlockState);\r\n    updatedFullCoinState = _.cloneDeep(updatedFullCoinState);\r\n    let updatedBlockState = [];\r\n    let coinsToBeReset = [];\r\n    let isStateUpdated = false;\r\n\r\n    const currentState = updatedFullBlockState[parentKey];\r\n    if (!starIndexes.includes(parentKey) && currentState.length > 1) {\r\n      currentState.forEach((elem) => {\r\n        const allMatched = updatedBlockState.every((item) =>\r\n          item.startsWith(elem[0])\r\n        );\r\n        if (allMatched) updatedBlockState.push(elem);\r\n        else {\r\n          coinsToBeReset.push(...updatedBlockState);\r\n          updatedBlockState = [elem];\r\n        }\r\n      });\r\n\r\n      if (coinsToBeReset.length)\r\n        coinsToBeReset.forEach((key) => {\r\n          updatedFullCoinState[colorMap[key[0]]][key].position = \"home\";\r\n        });\r\n\r\n      isStateUpdated = true;\r\n    }\r\n\r\n    if (isStateUpdated) {\r\n      setCoinState(updatedFullCoinState);\r\n      setBlockState({\r\n        ...updatedFullBlockState,\r\n        [parentKey]: [...new Set(updatedBlockState)],\r\n      });\r\n    }\r\n    return cb(!!coinsToBeReset.length);\r\n  };\r\n\r\n  // Changes the player to next possible\r\n  const changePlayer = () => {\r\n    const currentPlayerIndex = playersList.indexOf(currentPlayer);\r\n    const nextPlayer =\r\n      currentPlayerIndex === -1 || !playersList[currentPlayerIndex + 1]\r\n        ? playersList[0]\r\n        : playersList[currentPlayerIndex + 1];\r\n\r\n    setTimeout(() => {\r\n      setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\r\n      setCurrentPlayer(nextPlayer);\r\n    }, 500);\r\n  };\r\n\r\n  /**\r\n   * This function is called as a event handler onClick on coin.\r\n   * Updates the coin positions and changes the player if required.\r\n   * @returns void\r\n   */\r\n  const playTurn = () => {\r\n    // prevent other player's coin moving on click when turn in of other\r\n    if (parent !== currentPlayer || !diceState.num || !moveableClass) return;\r\n\r\n    // const { position: currentPosition } = coinState[parent][index];\r\n\r\n    // if (!nextMove) return changePlayer();\r\n\r\n    new Audio(coinMoveSound).play();\r\n\r\n    const updatedCoinState = _.cloneDeep({\r\n      ...coinState[parent],\r\n      [index]: { position: nextMove, isTurnAvailable: false },\r\n    });\r\n\r\n    const updatedBlockState = _.cloneDeep(blockState);\r\n\r\n    isPositionNotHomeOrWon &&\r\n      updatedBlockState[currentPosition].splice(\r\n        updatedBlockState[currentPosition].indexOf(index),\r\n        1\r\n      );\r\n    updatedBlockState[nextMove] = [\r\n      ...new Set([...(blockState[nextMove] || []), index]),\r\n    ];\r\n\r\n    updateCoinBlockStates(\r\n      nextMove,\r\n      { ...coinState, [parent]: updatedCoinState },\r\n      updatedBlockState,\r\n      (isKilledSomeone) => {\r\n        !isKilledSomeone &&\r\n          !nextMove.includes(\"won\") &&\r\n          diceState.num !== 6 &&\r\n          changePlayer();\r\n        setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"coin\" + moveableClass}\r\n      onClick={playTurn}\r\n      // parent={parent}\r\n      // index={index}\r\n      // isMoveable={moveableClass}\r\n    >\r\n      <img src={images[parent]} className={className} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import Dice from \"../components/dice\";\r\nimport Coin from \"../components/coin\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { allBlockState } from \"../recoil/atoms\";\r\n\r\n/**\r\n * Component for showing the coins in winning state in HomeCenter.\r\n * @param {Object} props\r\n * @returns JSX\r\n */\r\nfunction HomeCenterCoins({ parent, style }) {\r\n  const blockState = useRecoilValue(allBlockState);\r\n  const key = `${parent[0]}-won`;\r\n\r\n  return (\r\n    <div className=\"homeCenterCoin\" style={style}>\r\n      {blockState &&\r\n        blockState[key] &&\r\n        blockState[key].map((item, i) => (\r\n          <Coin key={i} parent={parent} index={item} className=\"haveWon\" />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * Component for the center of the board that stores COIN in winning state.\r\n * @returns JSX\r\n */\r\nfunction HomeCenter() {\r\n  return (\r\n    <div className=\"homeCenter\">\r\n      <div>\r\n        <HomeCenterCoins parent=\"yellow\" />\r\n      </div>\r\n      <div>\r\n        <HomeCenterCoins\r\n          parent=\"palegreen\"\r\n          style={{ transform: \"rotate(90deg)\" }}\r\n        />\r\n        <Dice />\r\n        <HomeCenterCoins\r\n          parent=\"royalblue\"\r\n          style={{ transform: \"rotate(90deg)\" }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <HomeCenterCoins parent=\"tomato\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeCenter;\r\n","export default __webpack_public_path__ + \"static/media/starOutline3.638b0c2b.png\";","import { useRecoilValue } from \"recoil\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  markColorIndexes,\r\n  markStarIndexes,\r\n  colorMap,\r\n} from \"../config/constants\";\r\nimport { allBlockState } from \"../recoil/atoms\";\r\nimport Coin from \"./coin\";\r\nimport StarBg from \"../assets/starOutline3.png\";\r\n\r\n/**\r\n * Component that holds the single step of the entire border steps grid.\r\n * @param {Object} props\r\n * @returns JSX\r\n */\r\nfunction StepsBox({ parent, adjacentDirection, index }) {\r\n  const blockState = useRecoilValue(allBlockState);\r\n  const parentKey = parent[0] + index;\r\n\r\n  const style = {\r\n    backgroundImage: markStarIndexes[adjacentDirection].markIndex.includes(\r\n      index\r\n    )\r\n      ? `url(${StarBg})`\r\n      : \"\",\r\n    backgroundColor: markColorIndexes[adjacentDirection].markIndex.includes(\r\n      index\r\n    )\r\n      ? parent\r\n      : \"transparent\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"stepBox\" style={style}>\r\n      <div style={{ position: \"absolute\" }}>{parent[0] + index}</div>\r\n      {blockState[parentKey] &&\r\n        blockState[parentKey].map((elem, i) => {\r\n          return <Coin key={i} parent={colorMap[elem[0]]} index={elem} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepsBox;\r\n","import StepsBox from \"./stepsBox\";\r\n\r\n/**\r\n * Component for one of the 4 steps grid.\r\n * @param {Object} props\r\n * @returns JSX\r\n */\r\nfunction StepsGrid({ style, parent, adjacentDirection }) {\r\n  return (\r\n    <div style={style}>\r\n      {Array(6)\r\n        .fill()\r\n        .map((_, i) => (\r\n          <div key={i} className={\"stepRow\"}>\r\n            {Array(3)\r\n              .fill()\r\n              .map((_, j) => (\r\n                <StepsBox\r\n                  key={i + \"\" + j}\r\n                  index={i + \"\" + j}\r\n                  parent={parent}\r\n                  adjacentDirection={adjacentDirection}\r\n                />\r\n              ))}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StepsGrid;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport {\r\n  allCoinState,\r\n  currentDiceState,\r\n  currentPlayerState,\r\n  currentPlayersListState,\r\n} from \"../recoil/atoms\";\r\nimport Coin from \"./coin\";\r\n\r\n// This component is for 4 blocks that stores COIN in initial state.\r\nfunction HomeBox({ parent }) {\r\n  const coinState = useRecoilValue(allCoinState);\r\n  const currentPlayer = useRecoilValue(currentPlayerState);\r\n  const playersList = useRecoilValue(currentPlayersListState);\r\n\r\n  // const currentDiceNum = useRecoilValue(currentDiceState);\r\n\r\n  return (\r\n    <div className={\"homeBox\"}>\r\n      {currentPlayer === parent && <div className={\"homeBoxOverlay\"}></div>}\r\n      {Array(4)\r\n        .fill()\r\n        .map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className={\"homeBoxInner\"}\r\n            style={{ border: `20px solid ${parent}` }}\r\n          >\r\n            {playersList.includes(parent) &&\r\n              coinState[parent][parent[0] + i].position === \"home\" && (\r\n                <Coin parent={parent} index={parent[0] + i} />\r\n              )}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeBox;\r\n","import { useState } from \"react\";\r\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\r\nimport { playerOrder } from \"../config/constants\";\r\nimport * as states from \"../recoil/atoms\";\r\n\r\n/**\r\n * This component is being called from GameSetup, and handles the player count buttons.\r\n * @param {Object} props\r\n * @returns JSX\r\n */\r\nfunction PlayerButton({ count, setTransClass }) {\r\n  const setCurrentPlayer = useRecoilState(states.currentPlayerState)[1];\r\n  const setCurrentPlayersList = useRecoilState(\r\n    states.currentPlayersListState\r\n  )[1];\r\n\r\n  const resetBlockState = useResetRecoilState(states.allBlockState);\r\n  const resetCoinState = useResetRecoilState(states.allCoinState);\r\n  const resetDiceState = useResetRecoilState(states.currentDiceState);\r\n\r\n  // Event handler for button onClick.\r\n  const handleClick = () => {\r\n    const randomNum = Math.floor(Math.random() * 2);\r\n    const playersList =\r\n      count === 2\r\n        ? [playerOrder[randomNum], playerOrder[randomNum + 2]]\r\n        : count === 3\r\n          ? playerOrder.slice(randomNum, randomNum + 3)\r\n          : [...playerOrder];\r\n\r\n    // reset previous states\r\n    resetBlockState();\r\n    resetCoinState();\r\n    resetDiceState();\r\n\r\n    setCurrentPlayersList([...playersList]);\r\n    setCurrentPlayer(playersList[0]);\r\n    // console.log(currentPlayersList, playersList);\r\n    setTransClass(\" scaleDown\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"gameSetupPlayerSelectBtn\" onClick={handleClick}>\r\n      {count}\r\n    </div>\r\n  );\r\n}\r\n\r\n/**\r\n * This component handles the screen where user can choose the players count.\r\n * @returns JSX\r\n */\r\nfunction GameSetup() {\r\n  const [transClass, setTransClass] = useState(\"\");\r\n\r\n  return (\r\n    <div className={\"gameSetup\" + transClass}>\r\n      <h1 style={{ color: \"black\", fontSize: 20 }}>Welcome to LUDO</h1>\r\n      <h1 style={{ color: \"black\", fontSize: 20 }}>Choose players</h1>\r\n      <div>\r\n        {[2, 3, 4].map((i) => (\r\n          <PlayerButton\r\n            key={i}\r\n            count={i}\r\n            setTransClass={(className) => setTransClass(className)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameSetup;\r\n","import \"./styles/App.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport _ from \"lodash\";\r\n\r\nimport * as states from \"./recoil/atoms\";\r\n\r\nimport HomeCenter from \"./components/homeCenter\";\r\nimport StepsGrid from \"./components/stepsGrid\";\r\nimport HomeBox from \"./components/homeBox\";\r\nimport GameSetup from \"./components/gameSetup\";\r\nimport { colorMap, moves, playerOrder } from \"./config/constants\";\r\n\r\nfunction Emulation() {\r\n  const [currentPlayer, setCurrentPlayer] = useRecoilState(\r\n    states.currentPlayerState\r\n  );\r\n  const [diceState, setDiceState] = useRecoilState(states.currentDiceState);\r\n  const [blockState, setBlockState] = useRecoilState(states.allBlockState);\r\n  const [coinState, setCoinState] = useRecoilState(states.allCoinState);\r\n  const playersList = useRecoilValue(states.currentPlayersListState);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(JSON.stringify({ blockState, coinState }, 0, 2));\r\n  // }, [JSON.stringify(coinState), JSON.stringify(blockState)]);\r\n\r\n  return (\r\n    <div>\r\n      {[1, 2, 3, 4, 5, 6].map((i) => (\r\n        <button\r\n          key={i}\r\n          onClick={() => {\r\n            setDiceState({\r\n              num: i,\r\n              isLocked: false,\r\n              lastRolledBy: currentPlayer,\r\n            });\r\n          }}\r\n        >\r\n          {i}\r\n        </button>\r\n      ))}\r\n      <br />\r\n      {playersList.map((elem, i) => (\r\n        <button\r\n          key={i}\r\n          onClick={() => {\r\n            setCurrentPlayer(elem);\r\n          }}\r\n          style={{ backgroundColor: elem }}\r\n        >\r\n          {elem}\r\n        </button>\r\n      ))}\r\n      <div>\r\n        <span>Enter (eg; p1-t40): </span>\r\n        <input\r\n          type=\"text\"\r\n          onKeyUp={({ code, currentTarget: { value } }) => {\r\n            if (code === \"Enter\") {\r\n              if (value.match(/^[pyrt][0-3]-[pyrt]\\d{2}$/)) {\r\n                const [coinKey, boxKey] = value.split(\"-\");\r\n                const parent = colorMap[coinKey[0]];\r\n                if (!playersList.includes(parent)) return;\r\n                const oldPosition = coinState[parent][coinKey].position;\r\n\r\n                setCoinState({\r\n                  ...coinState,\r\n                  [parent]: {\r\n                    ...coinState[parent],\r\n                    [coinKey]: { position: boxKey, isTurnAvailable: false },\r\n                  },\r\n                });\r\n\r\n                const oldBlockState = _.cloneDeep(blockState);\r\n\r\n                oldPosition &&\r\n                  !oldPosition.includes(\"home\") &&\r\n                  oldBlockState[oldPosition].splice(\r\n                    oldBlockState[oldPosition].indexOf(coinKey),\r\n                    1\r\n                  );\r\n\r\n                setBlockState({\r\n                  ...oldBlockState,\r\n                  [boxKey]: [\r\n                    ...new Set([...(oldBlockState[boxKey] || []), coinKey]),\r\n                  ],\r\n                });\r\n              } else alert(\"Wrong input!\");\r\n            }\r\n          }}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <GameSetup />\r\n      <div className=\"App\">\r\n        <div className=\"boardWrapper\">\r\n          <div className=\"innerRow\">\r\n            <HomeBox parent=\"palegreen\" />\r\n            <StepsGrid parent=\"yellow\" adjacentDirection=\"leftOrTop\" />\r\n            <HomeBox parent=\"yellow\" />\r\n          </div>\r\n          <div className=\"innerRow\">\r\n            <StepsGrid\r\n              style={{ transform: \"rotate(90deg)\" }}\r\n              parent=\"palegreen\"\r\n              adjacentDirection=\"rightOrBottom\"\r\n            />\r\n            <HomeCenter />\r\n            <StepsGrid\r\n              style={{ transform: \"rotate(90deg)\" }}\r\n              parent=\"royalblue\"\r\n              adjacentDirection=\"leftOrTop\"\r\n            />\r\n          </div>\r\n          <div className=\"innerRow\">\r\n            <HomeBox parent=\"tomato\" />\r\n            <StepsGrid parent=\"tomato\" adjacentDirection=\"rightOrBottom\" />\r\n            <HomeBox parent=\"royalblue\" />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        {/* {process.env.NODE_ENV === \"development\" && <Emulation />} */}\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}