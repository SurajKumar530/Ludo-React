{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dev1\\\\Ludo-React\\\\src\\\\components\\\\dice.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { currentDiceState, currentPlayerState } from \"../recoil/atoms\";\nimport diceRollSound from \"../assets/diceRoll2.mp3\";\n/**\r\n * Component for DICE.\r\n * @returns JSX\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dice() {\n  _s();\n\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [diceState, setDiceState] = useRecoilState(currentDiceState);\n  const currentPlayer = useRecoilValue(currentPlayerState); // Generates random dice value between 1 and 6\n\n  const rotateDice = () => setDiceState({\n    // num: 6,\n    num: Math.ceil(Math.random() * 6),\n    isLocked: true,\n    lastRolledBy: currentPlayer\n  }); // Event handler for dice onClick\n\n\n  const onClick = () => {\n    if (!isAnimating && !diceState.isLocked) {\n      setDiceState({\n        num: 0,\n        isLocked: false,\n        lastRolledBy: currentPlayer\n      });\n      setIsAnimating(true);\n      new Audio(diceRollSound).play();\n      setTimeout(() => {\n        rotateDice();\n        setIsAnimating(false);\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dice\" + (isAnimating ? \" dice-animation\" : \"\"),\n    onClick: onClick,\n    style: {\n      gridTemplateColumns: diceState.num > 1 ? \"repeat(2, 1fr)\" : \"1fr\"\n    },\n    children: Array(diceState.num).fill().map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: currentPlayer\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dice, \"FLBqcyjHsQe8XjVDfurJczohXP0=\", false, function () {\n  return [useRecoilState, useRecoilValue];\n});\n\n_c = Dice;\nexport default Dice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"sources":["C:/Users/dev1/Ludo-React/src/components/dice.js"],"names":["useState","useEffect","useRecoilState","useRecoilValue","currentDiceState","currentPlayerState","diceRollSound","Dice","isAnimating","setIsAnimating","diceState","setDiceState","currentPlayer","rotateDice","num","Math","ceil","random","isLocked","lastRolledBy","onClick","Audio","play","setTimeout","gridTemplateColumns","Array","fill","map","_","i","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,iBAArD;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BT,cAAc,CAACE,gBAAD,CAAhD;AACA,QAAMQ,aAAa,GAAGT,cAAc,CAACE,kBAAD,CAApC,CAHc,CAKd;;AACA,QAAMQ,UAAU,GAAG,MACjBF,YAAY,CAAC;AACX;AACAG,IAAAA,GAAG,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAFM;AAGXC,IAAAA,QAAQ,EAAE,IAHC;AAIXC,IAAAA,YAAY,EAAEP;AAJH,GAAD,CADd,CANc,CAcd;;;AACA,QAAMQ,OAAO,GAAG,MAAM;AACpB,QAAI,CAACZ,WAAD,IAAgB,CAACE,SAAS,CAACQ,QAA/B,EAAyC;AACvCP,MAAAA,YAAY,CAAC;AAAEG,QAAAA,GAAG,EAAE,CAAP;AAAUI,QAAAA,QAAQ,EAAE,KAApB;AAA2BC,QAAAA,YAAY,EAAEP;AAAzC,OAAD,CAAZ;AACAH,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEA,UAAIY,KAAJ,CAAUf,aAAV,EAAyBgB,IAAzB;AAEAC,MAAAA,UAAU,CAAC,MAAM;AACfV,QAAAA,UAAU;AACVJ,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GAZD;;AAcA,sBACE;AACE,IAAA,SAAS,EAAE,UAAUD,WAAW,GAAG,iBAAH,GAAuB,EAA5C,CADb;AAEE,IAAA,OAAO,EAAEY,OAFX;AAGE,IAAA,KAAK,EAAE;AACLI,MAAAA,mBAAmB,EAAEd,SAAS,CAACI,GAAV,GAAgB,CAAhB,GAAoB,gBAApB,GAAuC;AADvD,KAHT;AAAA,cAOGW,KAAK,CAACf,SAAS,CAACI,GAAX,CAAL,CACEY,IADF,GAEEC,GAFF,CAEM,CAACC,CAAD,EAAIC,CAAJ,kBACH;AAAA,6BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAElB;AAAnB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,OAAUiB,CAAV;AAAA;AAAA;AAAA;AAAA,YAHH;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9CQtB,I;UAE2BL,c,EACZC,c;;;KAHfI,I;AAgDT,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { currentDiceState, currentPlayerState } from \"../recoil/atoms\";\r\nimport diceRollSound from \"../assets/diceRoll2.mp3\";\r\n\r\n/**\r\n * Component for DICE.\r\n * @returns JSX\r\n */\r\nfunction Dice() {\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [diceState, setDiceState] = useRecoilState(currentDiceState);\r\n  const currentPlayer = useRecoilValue(currentPlayerState);\r\n\r\n  // Generates random dice value between 1 and 6\r\n  const rotateDice = () =>\r\n    setDiceState({\r\n      // num: 6,\r\n      num: Math.ceil(Math.random() * 6),\r\n      isLocked: true,\r\n      lastRolledBy: currentPlayer,\r\n    });\r\n\r\n  // Event handler for dice onClick\r\n  const onClick = () => {\r\n    if (!isAnimating && !diceState.isLocked) {\r\n      setDiceState({ num: 0, isLocked: false, lastRolledBy: currentPlayer });\r\n      setIsAnimating(true);\r\n\r\n      new Audio(diceRollSound).play();\r\n\r\n      setTimeout(() => {\r\n        rotateDice();\r\n        setIsAnimating(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\"dice\" + (isAnimating ? \" dice-animation\" : \"\")}\r\n      onClick={onClick}\r\n      style={{\r\n        gridTemplateColumns: diceState.num > 1 ? \"repeat(2, 1fr)\" : \"1fr\",\r\n      }}\r\n    >\r\n      {Array(diceState.num)\r\n        .fill()\r\n        .map((_, i) => (\r\n          <div key={i}>\r\n            <div style={{ backgroundColor: currentPlayer }}></div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dice;\r\n"]},"metadata":{},"sourceType":"module"}